目的:
	将一个类转换成客户端需要的另一个类,使原本由于接口兼容而不能一起工作的那些类可以一起工作
	有对象适配器和类适配器,更常用的是对象适配器;
	对象适配器采用组合的方式,可同时适配多个对象,组合模式是松耦合的
	类适配器是采用继承的方式,耦合度较高

对象适配器
优点:
	可以在不修改原有代码的基础上来复用现类,很好的符合了开闭原则
	采用对象组合的实现方式,更符合松耦合
缺点:
	重定义Adaptee的行为比较困难,这需要生成Adaptee的子类并且使Adapter引用这个子类而不是Adaptee本身

类适配器
优点:
	可以在不修改原有代码的基础上来复用现类,很好的符合了开闭原则
	可以重新定义Adaptee(被适配的类)的部分行为,因为Adapter是Adaptee的子类
	仅仅引入一个对象,并不需要额外的字段来引用Adaptee的实例
缺点:
	用一个具体的Adapter类对Adaptee和Target进行匹配,当如果想要匹配一个类以及所有它的子类时,类的适配器模式就不能胜任了.
		因为类的适配器模式中没有引入Adaptee的实例,仅调父类的SpecificRequest方法并不能去调用它对应子类的SpecificRequest方法
	采用多继承的实现方式,带来了不良的高耦合
应用:
	系统需要复用现有类,而该类的接口不符合系统的要求
	想要建立一个可重复使用的类,用于与一些彼此之间没有太大关联的一些类,包括一些可能在将来引进的类一起工作
.Net中使用DbDataAdapter可以将任意一个数据库访问或存取适配到DataSet对象上,DBDataAdapter在数据库和DataSet上做了很好的适配.SqlDataAdapter也是一个,针对SqlServer和DataSet的适配