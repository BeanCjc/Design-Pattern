目的:
	将一个复杂对象的构建与其表示相互分离,使得同样的构建过程可以创建不同的表示.
	分步骤来构建一个复杂对象,该复杂对象由多个子对象构成,但复杂对象构成算法相对稳定,各个子对象容易发生变化.强调组装过程的稳定
优点:
	使用建造者模式可以使客户端不需要知道产品内部的组成细节
	具体的建造者之间相互独立,易于扩展
	由于具体的建造者是独立的,因此可以对建造过程逐步细化,而不对其他模块产生影响
缺点:
	产生多余的Builder和Director对象
应用:
	当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时
	相同的方法,不同的执行顺序,产生不同的事件结果
	多个部件或零件,都可以装配到一个对象中,但是产生的结果又不相同
	产品类非常复杂,或者产品类中的调用顺序不同产生了不同的效能
.Net中StringBuilder就是该模式的一种实现.Append方法就相当于该模式中的builder中的Add,而ToString方法则对应该模式中的builder的GetCar.