目的:
	允许一个对象内部状态改变时改变它的行为,外部看起来似乎修改了其行为
优点:
	封装了转换规则
	枚举可能的状态,在枚举状态之前需要确定状态的种类
	将所有与某个状态有关的行为放到一个类中,并且可以方便的增加新的状态,只需改变状态即可改变行为
	允许状态转换逻辑与状态对象合成一体,而不是某一个巨大的条件语句块
	可以让多个Context共享一个状态对象,从而减少系统对象的个数
缺点:
	使用状态模式必然增加系统的对象
	实现比较复杂,使用不当会造成系统混乱
	对开闭原则的支持不太好,增加新的状态类需要修改那些负责状态转换的代码